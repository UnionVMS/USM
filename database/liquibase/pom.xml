<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>eu.europa.ec.mare.oss.usm</groupId>
  <artifactId>liquibase</artifactId>
  <version>2.2.0-SNAPSHOT</version>
  <name>liquibase</name>
  <packaging>jar</packaging>
  <properties>
    <liquibase.contexts>default</liquibase.contexts>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <citnetpath>webgate.ec.europa.eu/CITnet/</citnetpath>
    <svn.projectname>UNIONVMS</svn.projectname>
    <liquibase.clean.phase>clean</liquibase.clean.phase>
    <liquibase.update.phase>test</liquibase.update.phase>
    <docker.clean.phase>clean</docker.clean.phase>
    <docker.start.phase>process-test-resources</docker.start.phase>
    <docker.stop.phase>clean</docker.stop.phase>
  </properties>
  

  <profiles>
    <profile>
      <id>testdata</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <liquibase.contexts>test</liquibase.contexts>
      </properties>
    </profile>
    <profile>
      <id>docker-run</id>
      <properties>
        <liquibase.clean.phase>no-phase</liquibase.clean.phase>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
            <execution>
                  <id>clean</id>
                  <phase>${docker.clean.phase}</phase>
                  <goals>
                    <goal>stop</goal>
                    <goal>remove</goal>
                  </goals>
                  <configuration>
                    <removeAll>true</removeAll>
                    <allContainers>true</allContainers>
                  </configuration>
                </execution>
                <execution>
                  <id>start</id>
                  <phase>${docker.start.phase}</phase>
                  <goals>
                    <goal>build</goal>
                    <goal>start</goal>
                  </goals>
                </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>local</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <!-- This profile will get deactivated as soon as another profile 
          of the SAME pom becomes active. It will remain active if a profile from another 
          location (eg:the user settings) is activated. However the properties defined 
          below will not overwrite any value set in the user settings. -->
      </activation>
      <properties>
        <db.driver>org.postgresql.Driver</db.driver>
        <db.url>jdbc:postgresql://localhost:5432/usm2</db.url>
        <db.user>usm2</db.user>
        <db.passwd>password</db.passwd>
      </properties>
    </profile>
    <profile>
      <id>cygnus-test</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <db.driver>org.postgresql.Driver</db.driver>
        <db.url>jdbc:postgresql://cygnus-test:5432/usm2</db.url>
        <db.user>usm2</db.user>
        <db.passwd>password</db.passwd>
      </properties>
    </profile>
    <profile>
      <id>docker</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <db.driver>org.postgresql.Driver</db.driver>
        <db.url>jdbc:postgresql://${docker.machine.ip}:5432/usm2</db.url>
        <db.user>usm2</db.user>
        <db.passwd>password</db.passwd>
      </properties>
    </profile>
    <profile>
      <id>postgres</id>
      <activation>
      <activeByDefault>false</activeByDefault>
      </activation>
      <!-- This profile will get deactivated as soon as another profile 
          of the SAME pom becomes active. It will remain active if a profile from another 
          location (eg:the user settings) is activated. -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <version>1.5</version>
            <dependencies>
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>9.4-1201-jdbc41</version>
              </dependency>
            </dependencies>
            <configuration>
              <driver>${db.driver}</driver>
              <url>${db.url}</url>
              <username>${db.user}</username>
              <password>${db.passwd}</password>
            </configuration>
            <executions>
              <execution>
                <id>drop-schema</id>
                <goals>
                  <goal>execute</goal>
                </goals>
                <phase>${liquibase.clean.phase}</phase>
                <configuration>
                  <autocommit>true</autocommit>
                  <orderFile>ascending</orderFile>
                  <delimiter>;</delimiter>
                  <delimiterType>normal</delimiterType>
                  <onError>continue</onError>
                  <keepFormat>false</keepFormat>
                  <fileset>
                    <basedir>.</basedir>
                    <includes>
                      <include>scripts/drop_all_objects.sql</include>
                      <include>scripts/drop_trigger_functions.sql</include>
                    </includes>
                  </fileset>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
          <groupId>org.liquibase</groupId>
          <artifactId>liquibase-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>9.4-1201-jdbc41</version>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.liquibase</groupId>
          <artifactId>liquibase-maven-plugin</artifactId>
          <version>3.5.3</version>
          <configuration>
            <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
            <changeLogFile>changelog/db-changelog-master.xml</changeLogFile>
            <driver>${db.driver}</driver>
            <url>${db.url}</url>
            <username>${db.user}</username>
            <password>${db.passwd}</password>
            <contexts>${liquibase.contexts}</contexts>
          </configuration>
          <executions>
            <execution>
              <id>package-schema</id>
              <phase>process-test-resources</phase>
              <goals>
                <goal>updateSQL</goal>
              </goals>
              <configuration>
                <migrationSqlOutputFile>${project.build.directory}/usm-db-${project.version}.sql</migrationSqlOutputFile>
                <outputFileEncoding>UTF-8</outputFileEncoding>
                <logging>off</logging>
              </configuration>
            </execution>
            <execution>
              <id>update-schema</id>
              <phase>${liquibase.update.phase}</phase>
              <goals>
                <goal>update</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
              <groupId>io.fabric8</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <version>0.21.0</version>

              <configuration>
                <dockerHost>https://${docker.machine.ip}:2376</dockerHost>
                <certPath>${docker.certPath}</certPath>
                <useColor>true</useColor>

                <images>
                  <!-- A single's image configuration -->
                  <image>
                    <name>postgres-usm</name>
                    <alias>usm-pg-db</alias>
                    <build>
                      <dockerFileDir>${project.basedir}/docker/postgres</dockerFileDir>
                      <tags>postgres-usm</tags>
                    </build>
                    <run>
                    <env>
                      <POSTGRES_PASSWORD>password</POSTGRES_PASSWORD>
                      <POSTGRES_USER>usm2</POSTGRES_USER>
                    </env>
                      <ports>
                        <port>5432:5432</port>
                      </ports>
                      <hostname>cygnus-test</hostname>
                      <namingStrategy>alias</namingStrategy>
                      <wait>
                      <tcp>
                        <host>${docker.machine.ip}</host>
                        <ports>
                          <port>5432</port>
                        </ports>
                      </tcp>
                        <log>Final Start Of Postgres</log>
                        <time>10000</time>
                      </wait>
                    </run>
                  </image>
                </images>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-failsafe-plugin</artifactId>
              <version>2.19.1</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
        <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>${project.build.directory}/usm-db-${project.version}.sql</file>
                  <type>sql</type>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8</version>
        <configuration>
          <deployAtEnd>true</deployAtEnd>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <distributionManagement>
    <repository>
        <id>focus-releases</id>
        <name>UnionVms Repository</name>
        <url>http://nexus.focus.fish/nexus/content/repositories/releases/</url>
    </repository>
    <snapshotRepository>
        <id>focus-snapshots</id>
        <name>UnionVms Snapshot Repository</name>
        <url>http://nexus.focus.fish/nexus/content/repositories/snapshots/</url>
    </snapshotRepository>
</distributionManagement>
</project>
